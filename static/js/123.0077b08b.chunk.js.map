{"version":3,"file":"static/js/123.0077b08b.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/User/User.module.css?cfea","components/Users/User/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx","hoc/WithAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersContainer\":\"User_usersContainer__M0K12\",\"avatar\":\"User_avatar__iykWV\",\"users\":\"User_users__FoW9J\",\"user\":\"User_user__C5fNh\",\"pageLists\":\"User_pageLists__lD+Zx\",\"pagesButton\":\"User_pagesButton__8PvKr\",\"selectedPage\":\"User_selectedPage__9nb-s\"};","import s from \"./User.module.css\";\r\nimport React from \"react\";\r\nimport {UsersType} from \"../../../redux/store\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype UserPropsType = {\r\n    users: UsersType[],\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress:number[]\r\n    deleteUsersTC:(userId:number)=>void\r\n    postUsersTC:(userId:number)=>void\r\n}\r\nexport const Users = (props: UserPropsType) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <=26; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    // if(!props.isAuth){\r\n    //     return <Redirect to={'/login'}/>\r\n    // }\r\n    return (\r\n        <div>\r\n            <div className={s.usersContainer}>\r\n                <div className={s.pageLists}>\r\n                    {pages.map((el, index) => {\r\n                        return (\r\n                            <button key={index} onClick={() => {\r\n                                props.onPageChanged(el)\r\n                            }} className={props.currentPage === el ? s.selectedPage : ''}>{el}</button>)\r\n                    })}\r\n                </div>\r\n                <div className={s.users}>\r\n                    {props.users.map(el => {\r\n                        return (\r\n                            <div className={s.user} key={el.id}>\r\n                                <div>Full name: <span>{el.name}</span></div>\r\n                                <NavLink to={'/profile/' + el.id}>\r\n                                    <img className={s.avatar}\r\n                                         src={el.photos.small !== null ? el.photos.small : \"https://avatars.mds.yandex.net/i?id=0bbeac957963e13882ae83d5c690a08e603d7664-7803878-images-thumbs&n=13\"}\r\n                                         alt=\"\"/>\r\n                                </NavLink>\r\n                                {/*<div>Status: <span>{el.status}</span></div>*/}\r\n                                {/*<div>Country: <span>{el.location.country}</span></div>*/}\r\n                                {/*<div>City: <span>{el.location.city}</span></div>*/}\r\n                                <div>{el.followed ? <button disabled={props.followingInProgress.some(id=>id===el.id)} onClick={() => {\r\n                                    props.deleteUsersTC(el.id)\r\n                                    }}>Unfollow</button>\r\n                                    : <button disabled={props.followingInProgress.some(id=>id===el.id)} onClick={() => {\r\n                                       props.postUsersTC(el.id)\r\n                                    }}>Follow</button>}</div>\r\n                            </div>)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {StateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: StateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getIsFetching = (state: StateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {// не является сама по себе селектором. это логика селектора\r\n    return users.filter(el => true)\r\n})\r\nexport const getPageSize = (state: StateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: StateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: StateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getFollowingInProgress = (state: StateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {StateType} from \"../../redux/redux-store\";\r\nimport {\r\n    deleteUsersTC,\r\n    getUsersTC, postUsersTC,\r\n    setCurrentPage,\r\n} from \"../../redux/users-reducer\";\r\nimport React, {Component, ComponentType} from 'react';\r\nimport {UsersType} from \"../../redux/store\";\r\nimport {Users} from \"./User/Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype UserPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\ntype mapStateToPropsType = {\r\n    users: UsersType[],\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: number[],\r\n}\r\ntype mapDispatchToPropsType = {\r\n    deleteUsersTC: (userId: number) => void,\r\n    getUsersTC: (currentPage: number, pageSize: number) => void,\r\n    postUsersTC: (userId: number) => void\r\n}\r\n\r\nclass UsersContainer extends Component<UserPropsType> {\r\n    componentDidMount() {\r\n        this.props.getUsersTC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsersTC(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <h1>Users</h1>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    users={this.props.users}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    deleteUsersTC={this.props.deleteUsersTC}\r\n                    postUsersTC={this.props.postUsersTC}\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StateType) => {\r\n    console.log('mapStateToProps USERS')\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n        setCurrentPage,\r\n        getUsersTC,\r\n        deleteUsersTC,\r\n        postUsersTC\r\n    } as mapDispatchToPropsType),\r\n    WithAuthRedirect\r\n)(UsersContainer)","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../redux/redux-store\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(Component: ComponentType<T>)  {\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n        const {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}"],"names":["Users","props","Math","ceil","totalUsersCount","pageSize","pages","i","push","className","s","map","el","index","onClick","onPageChanged","currentPage","users","name","to","id","src","photos","small","alt","followed","disabled","followingInProgress","some","deleteUsersTC","postUsersTC","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getIsFetching","state","usersPage","isFetching","getUsers","filter","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","UsersContainer","pageNumber","getUsersTC","this","Preloader","Component","compose","connect","console","log","setCurrentPage","WithAuthRedirect","mapStateToProps","isAuth","auth","restProps"],"sourceRoot":""}